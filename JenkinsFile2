def artifactname = "sp-boot-app.jar"
def repoName = "sp-boot-app-repo"
def pipelineName = "devops_vk_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "spboot-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "sp-boot-package"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
  
       stage('Download_Artifacts') {
        environment {
	    		 SCANNER_HOME = tool 'sonarScanner'
	  		}
           steps {
              snDevOpsStep()
	      
	       echo 'Downloading Artifacts ........'
              sh 'mvn test'
	      withSonarQubeEnv('Sonar_Cloud') {
					sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/perf-sonar-scanner-cloud.properties'
			       
	        	}
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
      
	
 }
def printLogs() {
    sh "echo Going to echo a list"
    for (int i = 0; i < 2; i++) {
      String s1 ="Lorem ipsum dolor sit amet, consectetur adipiscing elitddsfdsvsdvdv dsdsvvv sdgsdv, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. JenkinFile  is also contains random String for increasing  log size  jerkin File which can be further help to test the file size impact on Mid server jerkin."
      for (int j = 0; j < 10; j++) {
          s1 += s1;
          println s1
          sh "echo Hello  dsfsfd fsd fds fdsf sdf sdf dsf dsf"
      }
    }
  }
